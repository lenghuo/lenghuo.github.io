{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2023/03/22/hello-world/"},{"title":"Springboot3.0配置文件多环境配置","text":"快速开始创建application.yml123spring: profiles: active: dev","link":"/2023/03/23/Springboot3-0%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%A4%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"},{"title":"go-lang-bind-struct-to-rows-scan","text":"golang如何把struct绑定到原生SQL查询1234567891011121314151617181920212223242526272829303132333435package maintype Power struct { Ts time.Time Current float32 Voltage int Phase float32}func main() { var taosUri = &quot;root:taosdata@tcp(localhost:6030)/power&quot; taos, err := sql.Open(&quot;taosSql&quot;, taosUri) if err != nil { fmt.Println(&quot;failed to connect TDengine, err:&quot;, err) return } sql := &quot;select * from d1001&quot; rows, err := taos.Query(sql) defer rows.Close() for rows.Next() { power := Power{} s := reflect.ValueOf(&amp;power).Elem() numCols := s.NumField() columns := make([]interface{}, numCols) for i := 0; i &lt; numCols; i++ { field := s.Field(i) columns[i] = field.Addr().Interface() } err := rows.Scan(columns...) if err != nil { fmt.Println(err) } log.Printf(&quot;采集时间：%v, 当前值：%v, 电压：%d&quot;, power.Ts, power.Current, power.Voltage) }}","link":"/2023/03/31/go-lang-bind-struct-to-rows-scan/"}],"tags":[],"categories":[]}